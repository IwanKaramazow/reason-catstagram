// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Form");

function make(handleSubmit, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var form = param[/* state */1][/* form */0];
              return React.createElement("form", {
                          className: "comment-form"
                        }, React.createElement("input", {
                              placeholder: "author",
                              type: "text",
                              value: form[/* author */0],
                              onChange: (function ($$event) {
                                  var nextForm_000 = /* author */$$event.target.value;
                                  var nextForm_001 = /* comment */form[/* comment */1];
                                  var nextForm = /* record */[
                                    nextForm_000,
                                    nextForm_001
                                  ];
                                  return Curry._1(send, /* HandleChange */[nextForm]);
                                })
                            }), React.createElement("input", {
                              placeholder: "comment",
                              type: "text",
                              value: form[/* comment */1],
                              onChange: (function ($$event) {
                                  var nextForm_000 = /* author */form[/* author */0];
                                  var nextForm_001 = /* comment */$$event.target.value;
                                  var nextForm = /* record */[
                                    nextForm_000,
                                    nextForm_001
                                  ];
                                  return Curry._1(send, /* HandleChange */[nextForm]);
                                })
                            }), React.createElement("input", {
                              hidden: true,
                              type: "submit",
                              onSubmit: (function (e) {
                                  e.preventDefault();
                                  return Curry._2(handleSubmit, form[/* author */0], form[/* comment */1]);
                                })
                            }));
            }),
          /* initialState */(function () {
              return /* record */[/* form : record */[
                        /* author */"",
                        /* comment */""
                      ]];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [/* record */[/* form */action[0]]]);
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
